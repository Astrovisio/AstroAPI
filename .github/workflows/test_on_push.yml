name: AstroAPI tests
run-name: ${{ github.actor }} is testing code automatically
on: [push]

jobs:
  unit-tests:
    name: unit-tests
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      statuses: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      API_TEST: true
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_SHA: ${{ github.sha }}
      STATUSES_URL: ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      #- name: Install pre-commit
      #  run: uv add pre-commit
      #- name: Run pre-commit
      #  run: uv run pre-commit run --all-files

      - name: Install the project
        run: uv sync --all-extras

      - name: Run tests
        run: |
          uv add coverage
          uv run coverage run -m pytest -v
      - name: Display coverage
        id: display-coverage
        run: |
          COVERAGE=$(uv run coverage report --format=total)
          echo "Coverage: $COVERAGE"
          echo "coverage=$COVERAGE" >> $GITHUB_ENV
      - name: Set GitHub commit status
        if: success()
        run: |
          if [ -n "${GITHUB_TOKEN}" ] && [ -n "${GITHUB_REPOSITORY}" ] && [ -n "${STATUSES_URL}" ]; then
            COVERAGE=$(echo ${{ env.coverage }} | tr -d '%')
            DESCRIPTION="Test coverage: ${COVERAGE}%"
            STATE="success"
            curl -f -s --show-error -X POST \
              --url "${STATUSES_URL}" \
              -H 'accept: application/vnd.github.v3+json' \
              -H "authorization: Bearer ${GITHUB_TOKEN}" \
              -H 'content-type: application/json' \
              -d "{ \"state\": \"${STATE}\", 
                    \"target_url\": \"https://${GITHUB_DOMAIN:-github.com}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}\", 
                    \"description\": \"${DESCRIPTION}\", \"context\": \"Coverage\"
                }"
          fi
